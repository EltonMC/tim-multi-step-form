{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data/formData.model.ts","webpack:///./src/app/data/formData.service.ts","webpack:///./src/app/location/Location.component.html","webpack:///./src/app/location/location.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/person/person.component.html","webpack:///./src/app/person/person.component.ts","webpack:///./src/app/plan/plan.component.html","webpack:///./src/app/plan/plan.component.ts","webpack:///./src/app/result/result.component.html","webpack:///./src/app/result/result.component.ts","webpack:///./src/app/services/email.service.ts","webpack:///./src/app/workflow/workflow-guard.service.ts","webpack:///./src/app/workflow/workflow.model.ts","webpack:///./src/app/workflow/workflow.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationComponent } from './location/location.component';\nimport { PlanComponent } from './plan/plan.component';\nimport { PersonComponent } from './person/person.component';\nimport { ResultComponent } from './result/result.component';\n\nimport { WorkflowGuard } from './workflow/workflow-guard.service';\nimport { WorkflowService } from './workflow/workflow.service';\nimport { NgxMaskModule } from 'ngx-mask';\n\n\nexport const appRoutes: Routes = [\n    // 1st Route\n    { path: 'location',  component: LocationComponent },\n    // 2nd Route\n    { path: 'plan',  component: PlanComponent, canActivate: [WorkflowGuard] },\n    // 3rd Route\n    { path: 'person',  component: PersonComponent, canActivate: [WorkflowGuard] },\n    // 4th Route\n    { path: 'result',  component: ResultComponent, canActivate: [WorkflowGuard] },\n    // 5th Route\n    { path: '',   redirectTo: '/location', pathMatch: 'full' },\n    // 6th Route\n    { path: '**', component: LocationComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, { useHash: true} ), NgxMaskModule.forRoot()],\n  exports: [RouterModule],\n  providers: [WorkflowGuard]\n})\n\nexport class AppRoutingModule {}\n","module.exports = \"<section style=\\\"background:#f4f4f4;\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"board\\\">\\n          <!-- Navigation Area (Circular Tabs) -->\\n          <msw-navbar></msw-navbar>\\n          <!-- End Navigation Area (Circular Tabs) -->\\n\\n          <!-- Content Area -->\\n          <div class=\\\"tab-content\\\">\\n              <!-- Nested view  -->\\n              <router-outlet></router-outlet>\\n          </div>\\n          <!-- End Content Area -->\\n      </div>\\n  </div>\\n</section>\\n\"","import { Component, OnInit, Input }   from '@angular/core';\n\nimport { FormDataService }            from './data/formData.service';\n\n@Component ({\n    selector:     'multi-step-wizard-app'\n    ,templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n    title = 'Tim Promoção';\n    @Input() formData;\n\n    constructor(private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.formData = this.formDataService.getFormData();\n        console.log(this.title + ' loaded!');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n/* App Root */\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/* Feature Components */\nimport { LocationComponent } from './location/location.component';\nimport { PlanComponent } from './plan/plan.component';\nimport { PersonComponent } from './person/person.component';\nimport { ResultComponent } from './result/result.component';\n\n/* Routing Module */\nimport { AppRoutingModule } from './app-routing.module';\n\n/* Shared Service */\nimport { FormDataService } from './data/formData.service';\nimport { WorkflowService } from './workflow/workflow.service';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { EmailService } from './services/email.service';\n\n@NgModule({\n    imports:      [ BrowserModule,\n                    FormsModule,\n                    AppRoutingModule,\n                    HttpClientModule,\n                    NgxMaskModule.forRoot()\n                  ],\n    providers:    [\n      { provide: EmailService, useClass: EmailService },\n      { provide: FormDataService, useClass: FormDataService },\n      { provide: WorkflowService, useClass: WorkflowService }],\n    declarations: [ AppComponent, NavbarComponent, LocationComponent, PlanComponent, PersonComponent, ResultComponent ],\n    bootstrap:    [ AppComponent ]\n})\n\nexport class AppModule {}\n","export class FormData {\n    state: string = '';\n    city: string = '';\n    phone: string = '';\n    plan = {};\n    name: string = '';\n    cpf: string = '';\n    email: string = '';\n    birthday: string = '';\n    rg: string = '';\n    expe: string = '';\n    uf: string = '';\n    nasc: string = '';\n    phone_2: string = '';\n    mother: string = '';\n    main_address: Address;\n    aux_address: Address;\n    clear() {\n       this.state = '';\n        this.city = '';\n        this.phone = '';\n        this.plan = {};\n    }\n}\n\nexport class Location {\n    state: string = '';\n    city: string = '';\n    phone: string = '';\n}\n\nexport class Person {\n    name: string = '';\n    cpf: string = '';\n    email: string = '';\n    birthday: string = '';\n    rg: string = '';\n    expe: string = '';\n    uf: string = '';\n    nasc: string = '';\n    phone: string = '';\n    phone_2: string = '';\n    mother: string = '';\n    main_address: Address;\n    aux_address: Address;\n}\n\nexport class Address {\n    cep: string = '';\n    street: string = '';\n    district: string = '';\n    city: string = '';\n    state: string = '';\n    number: string = '';\n    complement: string = '';\n    ref: string = '';\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormData, Location, Person } from './formData.model';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS } from '../workflow/workflow.model';\n\n@Injectable()\nexport class FormDataService {\n\n    private formData: FormData = new FormData();\n    private isLocationFormValid = false;\n    private isPlanFormValid = false;\n    private isPersonFormValid = false;\n\n    constructor(private workflowService: WorkflowService) {\n    }\n\n    getLocation(): Location {\n        // Return the Location data\n        const location: Location = {\n            state: this.formData.state,\n            city: this.formData.city,\n            phone: this.formData.phone\n        };\n        return location;\n    }\n\n    setLocation(data: Location) {\n        // Update the Location data only when the Location Form had been validated successfully\n        this.isLocationFormValid = true;\n        this.formData.state = data.state;\n        this.formData.city = data.city;\n        this.formData.phone = data.phone;\n        // Validate Location Step in Workflow\n        this.workflowService.validateStep(STEPS.location);\n    }\n\n    getPlan(): object {\n        // Return the plan type\n        return this.formData.plan;\n    }\n\n    setPlan(data) {\n        // Update the plan type only when the Plan Form had been validated successfully\n        this.isPlanFormValid = true;\n        this.formData.plan = data;\n        // Validate Work Step in Workflow\n        this.workflowService.validateStep(STEPS.plan);\n    }\n\n    getPerson(): Person {\n        // Return the Person data\n        const person: Person = {\n            name: this.formData.name,\n            cpf: this.formData.cpf,\n            email: this.formData.email,\n            birthday: this.formData.birthday,\n            rg: this.formData.rg,\n            expe: this.formData.expe,\n            uf: this.formData.uf,\n            nasc: this.formData.nasc,\n            phone: this.formData.phone,\n            phone_2: this.formData.phone_2,\n            mother: this.formData.mother,\n            main_address: this.formData.main_address,\n            aux_address: this.formData.aux_address,\n        };\n        return person;\n    }\n\n    setPerson(data: Person) {\n        // Update the Person data only when the Person Form had been validated successfully\n        this.isPersonFormValid = true;\n        this.formData.name = data.name;\n        this.formData.cpf = data.cpf;\n        this.formData.email = data.email;\n        this.formData.birthday = data.birthday;\n        this.formData.rg = data.rg;\n        this.formData.expe = data.expe;\n        this.formData.uf = data.uf;\n        this.formData.nasc = data.nasc;\n        this.formData.phone = data.phone;\n        this.formData.phone_2 = data.phone_2;\n        this.formData.mother = data.mother;\n        this.formData.main_address = data.main_address;\n        this.formData.aux_address = data.aux_address;\n        // Validate Person Step in Workflow\n        this.workflowService.validateStep(STEPS.person);\n    }\n\n    getFormData(): FormData {\n        // Return the entire Form Data\n        return this.formData;\n    }\n\n    resetFormData(): FormData {\n        // Reset the workflow\n        this.workflowService.resetSteps();\n        // Return the form data after all this.* members had been reset\n        this.formData.clear();\n        this.isLocationFormValid = this.isPlanFormValid = this.isPersonFormValid = false;\n        return this.formData;\n    }\n\n    isFormValid() {\n        // Return true if all forms had been validated successfully; otherwise, return false\n        return this.isLocationFormValid &&\n                this.isPlanFormValid &&\n                this.isPersonFormValid;\n    }\n}\n","module.exports = \"<form #locationForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n    <div class=\\\"tab-pane fade in active\\\">\\n        <h4 class=\\\"head text-center\\\">{{title}}</h4>\\n        <br/>\\n        <div class='row'>\\n            <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8'>\\n                <div class=\\\"row\\\">\\n                    <div class='col-xs-12 col-sm-6'>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"firstname\\\">Estado*</label>\\n                            <select class=\\\"form-control input-md\\\" #firstname=\\\"ngModel\\\" required id=\\\"state\\\" name=\\\"state\\\" type=\\\"text\\\" [(ngModel)]=\\\"location.state\\\" (change)=\\\"onChange($event)\\\">\\n                              <option *ngFor=\\\"let state of states\\\" value=\\\"{{ state.uf }}\\\"> {{ state.name }} </option>\\n                            </select>\\n                            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.state.invalid  && (location.state.dirty || location.state.touched))\\\">Selecione um estado.</div> -->\\n                        </div>\\n                    </div>\\n                    <div class='col-xs-12 col-sm-6'>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"lastname\\\">Cidade*</label>\\n                            <select class=\\\"form-control input-md\\\" #lastname=\\\"ngModel\\\" required id=\\\"city\\\" name=\\\"city\\\" type=\\\"text\\\" [(ngModel)]=\\\"location.city\\\">\\n                              <option *ngFor=\\\"let city of cities\\\" value=\\\"{{ city }}\\\"> {{ city }} </option>\\n                            </select>\\n                            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.city.invalid  && (location.city.dirty || location.city.touched))\\\">Selecione uma cidade.</div> -->\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"email\\\">Celular*</label>\\n                    <input class=\\\"form-control input-md\\\" #email=\\\"ngModel\\\" required id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" minlength=\\\"10\\\" [(ngModel)]=\\\"location.phone\\\" mask=\\\"(00) 00000-0000\\\">\\n                    <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.phone.invalid  && (location.phone.dirty || location.phone.touched))\\\">Selecione uma cidade.</div> -->\\n                </div>\\n\\n                <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-outline-rounded\\\" [disabled]=\\\"!locationForm.valid\\\" (click)=\\\"goToNext(locationForm)\\\"> Continuar <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\n                </div>\\n\\n                <div class=\\\"form-group text-center\\\" [hidden]=\\\"!flagLocation\\\">\\n                  <div class=\\\"alert alert-success\\\"> Ops! Ainda não conseguimos chegar até você =(\\n                    <br />\\n                    <br />\\n                    Mas não se preocupe, vamos avisar quando a TIM Live estiver disponível na sua região.\\n                   </div>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\"","import { EmailService } from './../services/email.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Location } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\n\nimport Brazil from '../../assets/data/brazil-states-cities.json';\nimport fourG from '../../assets/data/4g-tim.json';\n\n@Component ({\n    // tslint:disable-next-line:component-selector\n    selector: 'mt-wizard-location',\n    templateUrl: './Location.component.html'\n})\n\nexport class LocationComponent implements OnInit {\n    title = 'Verifique nossa disponibilidade';\n    location: Location;\n    flagLocation: boolean = false;\n    states: any;\n    cities = [];\n    form: any;\n\n    constructor(private router: Router, private formDataService: FormDataService, private emailService: EmailService) {\n      this.states = Brazil.states;\n    }\n\n    ngOnInit() {\n        this.location = this.formDataService.getLocation();\n    }\n\n    onChange(event) {\n       // tslint:disable-next-line:curly\n       this.states.map(data => { if (data.uf === this.location.state) this.cities = data.cities; });\n    }\n\n    removeAcento (text) {\n        text = text.toLowerCase();\n        text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');\n        text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');\n        text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');\n        text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');\n        text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');\n        text = text.replace(new RegExp('[Ç]','gi'), 'c');\n        return text;\n    }\n\n    save(form: any): boolean {\n        // tslint:disable-next-line:curly\n        // tslint:disable-next-line:max-line-length\n        fourG.map(data => {if (this.removeAcento(data) === this.removeAcento(this.location.city.toUpperCase())) this.flagLocation = true; });\n        if (!form.valid) {\n          return false;\n        }else if (!this.flagLocation){\n          this.flagLocation = true;\n          return false;\n        }\n\n        this.formDataService.setLocation(this.location);\n        return true;\n    }\n\n    goToNext(form: any) {\n      const body =\n      '<h1> Dados do formulario: </h1>' +\n      '<h3> Dados do cliente: </h3>' +\n      '<p> Celular: ' + this.location.phone + '<?p>' +\n      '<p> Estado: ' + this.location.state + '<?p>' +\n      '<p> Cidade: ' + this.location.city + '<?p>';\n      this.emailService.send('[TIM] Disponibilidade ', body).subscribe(res => {\n        if (this.save(form)) {\n          // Navigate to the plan page\n          this.router.navigate(['/plan']);\n        }\n      }, err => {});\n    }\n}\n","module.exports = \"<div class=\\\"board-inner\\\" id=\\\"status-buttons\\\">\\n    <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\">\\n        <div class=\\\"liner\\\"></div>\\n\\n        <!-- circular user icon -->\\n        <li>\\n            <a routerLink=\\\"/location\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\" data-toggle=\\\"tab\\\" title=\\\"location\\\">\\n                <span class=\\\"round-tabs one\\\">\\n                  <i class=\\\"glyphicon glyphicon-map-marker\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        <!-- circular tasks icon -->\\n         <li>\\n            <a routerLink=\\\"/plan\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"plan\\\">\\n                <span class=\\\"round-tabs two\\\">\\n                  <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        <!-- circular home icon -->\\n        <li>\\n            <a routerLink=\\\"/person\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"person\\\">\\n                <span class=\\\"round-tabs three\\\">\\n                    <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        <!-- circular ok icon -->\\n        <li>\\n            <a routerLink=\\\"/result\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"completed\\\">\\n                <span class=\\\"round-tabs four\\\">\\n                  <i class=\\\"glyphicon glyphicon-ok\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n    </ul>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<!-- Close the Splash screen -->\\n<script src=\\\"assets/js/loading-bars.js\\\"></script>\\n\"","import { Component } from '@angular/core';\n\n@Component ({\n    selector: 'msw-navbar'\n    ,templateUrl: './navbar.component.html'\n})\n\nexport class NavbarComponent {}","module.exports = \"<form #personForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n  <div class=\\\"tab-pane fade in active\\\">\\n    <h4 class=\\\"head text-center\\\"> DADOS PESSOAIS </h4>\\n    <br />\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-8'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">Nome Completo</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nome Completo\\\" [(ngModel)]=\\\"person.name\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-4'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">CPF</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"cpf\\\" name=\\\"cpf\\\" type=\\\"text\\\" placeholder=\\\"CPF\\\"\\n              [(ngModel)]=\\\"person.cpf\\\" mask=\\\"000.000.000-00\\\" minlength=\\\"11\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">O CPF é obrigatório.</div> -->\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-8'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">Email</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\"\\n              placeholder=\\\"Email\\\" [(ngModel)]=\\\"person.email\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">O email completo é obrigatório.</div> -->\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-4'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">Data de Nascimento</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"birthday\\\" name=\\\"birthday\\\" type=\\\"text\\\" placeholder=\\\"dd/mm/aaaa\\\"\\n              [(ngModel)]=\\\"person.birthday\\\" minlength=\\\"8\\\" mask=\\\"00/00/0000\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">A data de nascimento é obrigatória.</div> -->\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-6'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">RG</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"rg\\\" name=\\\"rg\\\" type=\\\"email\\\"\\n              placeholder=\\\"RG\\\" [(ngModel)]=\\\"person.rg\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">O RG é obrigatório.</div> -->\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">Órgão expedidor</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"expe\\\" name=\\\"expe\\\" type=\\\"text\\\" placeholder=\\\"Expedidor\\\"\\n              [(ngModel)]=\\\"person.expe\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">O órgão expedidor é obrigatório.</div> -->\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">UF expedição</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"uf\\\" name=\\\"uf\\\" type=\\\"text\\\" placeholder=\\\"UF\\\"\\n              [(ngModel)]=\\\"person.uf\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">A UF de expedição é obrigatória.</div> -->\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-6'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">Nacionalidade</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"nasc\\\" name=\\\"nasc\\\" type=\\\"email\\\"\\n              placeholder=\\\"Nascionalidade\\\" [(ngModel)]=\\\"person.nasc\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">A nascionalidade é obrigatória.</div> -->\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">Celular para contato</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" placeholder=\\\"(00) 00000-0000\\\"\\n              [(ngModel)]=\\\"person.phone\\\" minlength=\\\"11\\\" mask=\\\"(00) 00000-0000\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">O celular para contato é obrigatório.</div> -->\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\" for=\\\"street\\\">Telefone para contato</label>\\n              <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"phone_2\\\" name=\\\"phone_2\\\" type=\\\"text\\\" placeholder=\\\"(00) 0000-0000\\\"\\n                [(ngModel)]=\\\"person.phone_2\\\" minlength=\\\"11\\\" mask=\\\"(00) 00000-0000\\\">\\n              <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">O telefone para contato é obrigatório.</div> -->\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-12'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"street\\\">Nome completo da Mãe</label>\\n            <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"mother\\\" name=\\\"mother\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nome completo da Mãe\\\" [(ngModel)]=\\\"person.mother\\\">\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"street.valid\\\">A nascionalidade é obrigatória.</div> -->\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class='row'>\\n      <div class=\\\"form-group text-center\\\">\\n        <button class=\\\"btn btn-outline-rounded btn-success\\\" [disabled]=\\\"!personForm.valid\\\" (click)=\\\"goToNext(personForm)\\\">\\n          Continuar <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</form>\\n\"","import { EmailService } from './../services/email.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Person } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\n\n@Component ({\n    // tslint:disable-next-line:component-selector\n    selector:     'mt-wizard-person',\n    templateUrl: './person.component.html'\n})\n\nexport class PersonComponent implements OnInit {\n    // title = 'Where do you live?';\n    person: Person;\n    form: any;\n\n    constructor(private router: Router, private formDataService: FormDataService, private emailService: EmailService) {\n    }\n\n    ngOnInit() {\n        this.person = this.formDataService.getPerson();\n        console.log('Person feature loaded!');\n    }\n\n    save(form: any): boolean {\n        if (!form.valid) {\n            return false;\n        }\n\n        this.formDataService.setPerson(this.person);\n        return true;\n    }\n\n    goToPrevious(form: any) {\n        if (this.save(form)) {\n            // Navigate to the plan page\n            this.router.navigate(['/plan']);\n        }\n    }\n\n    goToNext(form: any) {\n\n        const body =\n          '<h1> Dados do formulario: </h1>' +\n          '<h3> Dados do cliente: </h3>' +\n          '<p> Nome Completo:' + this.person.name + '<?p>' +\n          '<p> CPF: ' + this.person.cpf + '<?p>' +\n          '<p> Email: ' + this.person.email + '<?p>' +\n          '<p> Dada de Nascimento: ' + this.person.birthday + '<?p>' +\n          '<p> RG:' + this.person.rg + '<?p>' +\n          '<p> Orgão expedidor: ' + this.person.expe + '<?p>' +\n          '<p> UF expedição:' + this.person.uf + '<?p>' +\n          '<p> Nascionalidade:' + this.person.nasc + '<?p>' +\n          '<p> Celular: ' + this.person.phone + '<?p>' +\n          '<p> Telefone: ' + this.person.phone_2 + '<?p>' +\n          '<p> Nome da Mãe:' + this.person.mother;\n        if (this.save(form)) {\n            this.emailService.send('[TIM] Contrate Agora', body).subscribe(res => {\n              // Navigate to the result page\n              this.router.navigate(['/result']);\n            }, err => {});\n        }\n    }\n}\n","module.exports = \"<form #planForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n    <div class=\\\"form-horizontal\\\">\\n        <div class=\\\"tab-pane fade in active\\\">\\n            <h4 class=\\\"head text-center\\\">{{title}}</h4>\\n            <br/>\\n            <div class='row'>\\n                <div class='col-xs-offset-4 col-xs-10 col-sm-offset-5 col-sm-4'>\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"radio tim-radio\\\" *ngFor=\\\"let item of plans?.fourG\\\" >\\n                            <label>\\n                                <input type=\\\"radio\\\" #work=\\\"ngModel\\\" required name=\\\"plan\\\" [(ngModel)]=\\\"plan\\\" value=\\\"{{ item.id }}\\\">\\n                                {{ item.title }}\\n                            </label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group text-center space-20\\\">\\n                <button class=\\\"btn btn-outline-rounded btn-success\\\" [disabled]=\\\"!planForm.valid\\\" (click)=\\\"goToNext(planForm)\\\"> Continuar <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FormDataService } from '../data/formData.service';\nimport Plans from '../../assets/data/plans.json';\n\n@Component ({\n    // tslint:disable-next-line:component-selector\n    selector:     'mt-wizard-plan',\n    templateUrl: './plan.component.html'\n})\n\nexport class PlanComponent implements OnInit {\n    title = 'SELECIONE UM PLANO';\n    plans: object = {};\n    plan = {};\n    form: any;\n\n    constructor(private router: Router, private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.plans = Plans;\n        this.plan = this.formDataService.getPlan();\n        console.log('Plan feature loaded!');\n    }\n\n    save(form: any): boolean {\n        if (!form.valid) {\n            return false;\n        }\n\n        this.formDataService.setPlan(this.plan);\n        return true;\n    }\n\n    goToPrevious(form: any) {\n        if (this.save(form)) {\n            // Navigate to the location page\n            this.router.navigate(['/location']);\n        }\n    }\n\n    goToNext(form: any) {\n        if (this.save(form)) {\n            // Navigate to the person page\n            this.router.navigate(['/person']);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"tab-pane fade in active\\\">\\n    <h3 class=\\\"head text-center\\\">{{title}}</h3>\\n    <h4 class=\\\"text-center\\\">\\n        Olá {{ formData.name }},\\n    </h4>\\n    <p class=\\\"narrow text-center\\\">\\n        Em breve nossos atendentes vão entrar em contato com você.\\n    </p>\\n    <br />\\n    <br />\\n    <br />\\n</div>\\n\"","import { Component, OnInit, Input }   from '@angular/core';\n\nimport { FormData }                   from '../data/formData.model';\nimport { FormDataService }            from '../data/formData.service';\n\n@Component ({\n    selector:     'mt-wizard-result'\n    ,templateUrl: './result.component.html'\n})\n\nexport class ResultComponent implements OnInit {\n    title = 'Obrigado pela preferência!';\n    @Input() formData: FormData;\n    isFormValid: boolean = false;\n\n    constructor(private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.formData = this.formDataService.getFormData();\n        this.isFormValid = this.formDataService.isFormValid();\n        console.log('Result feature loaded!');\n    }\n\n    submit() {\n        alert('Excellent Job!');\n        this.formData = this.formDataService.resetFormData();\n        this.isFormValid = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class EmailService {\n\n  constructor(private http: HttpClient) { }\n\n  send(subject: string, body: string): Observable<any> {\n    const formData = new FormData();\n    formData.append('body', body);\n    formData.append('subject', subject);\n    return this.http.post('http://timpromocao.com.br/tim-response/send.php', formData, {responseType: 'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate, Router,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    CanLoad, Route\n} from '@angular/router';\n\nimport { WorkflowService } from './workflow.service';\n\n@Injectable()\nexport class WorkflowGuard implements CanActivate {\n    constructor(private router: Router, private workflowService: WorkflowService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let path: string = route.routeConfig.path;\n\n        return this.verifyWorkFlow(path);\n    }\n\n    verifyWorkFlow(path) : boolean {\n        console.log(\"Entered '\" + path + \"' path.\");\n\n        // If any of the previous steps is invalid, go back to the first invalid step\n        let firstPath = this.workflowService.getFirstInvalidStep(path);\n        if (firstPath.length > 0) {\n            console.log(\"Redirected to '\" + firstPath + \"' path which it is the first invalid step.\");\n            let url = `/${firstPath}`;\n            this.router.navigate([url]);\n            return false;\n        };\n\n        return true;\n    }\n}\n\n\n","export const STEPS = {\n    location: 'location',\n    plan: 'plan',\n    person: 'person',\n    result: 'result'\n}\n","import { Injectable } from '@angular/core';\n\nimport { STEPS } from './workflow.model';\n\n@Injectable()\nexport class WorkflowService {\n    private workflow = [\n        { step: STEPS.location, valid: false },\n        { step: STEPS.plan, valid: false },\n        { step: STEPS.person, valid: false },\n        { step: STEPS.result, valid: false }\n    ];\n\n    validateStep(step: string) {\n        // If the state is found, set the valid field to true\n        var found = false;\n        for (var i = 0; i < this.workflow.length && !found; i++) {\n            if (this.workflow[i].step === step) {\n                found = this.workflow[i].valid = true;\n            }\n        }\n    }\n\n    resetSteps() {\n        // Reset all the steps in the Workflow to be invalid\n        this.workflow.forEach(element => {\n            element.valid = false;\n        });\n    }\n\n    getFirstInvalidStep(step: string) : string {\n        // If all the previous steps are validated, return blank\n        // Otherwise, return the first invalid step\n        var found = false;\n        var valid = true;\n        var redirectToStep = '';\n        for (var i = 0; i < this.workflow.length && !found && valid; i++) {\n            let item = this.workflow[i];\n            if (item.step === step) {\n                found = true;\n                redirectToStep = '';\n            }\n            else {\n                valid = item.valid;\n                redirectToStep = item.step\n            }\n        }\n        return redirectToStep;\n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}