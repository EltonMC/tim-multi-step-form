{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data/formData.model.ts","webpack:///./src/app/data/formData.service.ts","webpack:///./src/app/location/Location.component.html","webpack:///./src/app/location/location.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/payment/payment.component.css","webpack:///./src/app/payment/payment.component.html","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/person/person.component.html","webpack:///./src/app/person/person.component.ts","webpack:///./src/app/plan/plan.component.html","webpack:///./src/app/plan/plan.component.ts","webpack:///./src/app/result/result.component.html","webpack:///./src/app/result/result.component.ts","webpack:///./src/app/services/cep.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/email.service.ts","webpack:///./src/app/workflow/workflow-guard.service.ts","webpack:///./src/app/workflow/workflow.model.ts","webpack:///./src/app/workflow/workflow.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationComponent } from './location/location.component';\nimport { PlanComponent } from './plan/plan.component';\nimport { PersonComponent } from './person/person.component';\nimport { ResultComponent } from './result/result.component';\nimport { PaymentComponent } from './payment/payment.component';\n\nimport { WorkflowGuard } from './workflow/workflow-guard.service';\nimport { WorkflowService } from './workflow/workflow.service';\nimport { NgxMaskModule } from 'ngx-mask';\n\n\nexport const appRoutes: Routes = [\n    // 1st Route\n    { path: 'location',  component: LocationComponent },\n    // 2nd Route\n    { path: 'plan',  component: PlanComponent, canActivate: [WorkflowGuard] },\n    // 3rd Route\n    { path: 'person',  component: PersonComponent, canActivate: [WorkflowGuard] },\n    // 4th Route\n    { path: 'payment',  component: PaymentComponent, canActivate: [WorkflowGuard] },\n    // 5th Route\n    { path: '',   redirectTo: '/location', pathMatch: 'full' },\n    // 6th Route\n    { path: '**', component: LocationComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { useHash: true} ),\n    NgxMaskModule.forRoot()\n  ],\n  exports: [RouterModule],\n  providers: [WorkflowGuard]\n})\n\nexport class AppRoutingModule {}\n","module.exports = \"<section style=\\\"background:#f4f4f4;\\\">\\n  <div class=\\\"header-tim\\\">\\n    <div class=\\\"col-xs-2 col-sm-offset-2 col-sm-4\\\">\\n      <a href=\\\"https://assineliveinternet.com/internet\\\"><img src=\\\"https://assineliveinternet.com/wp-content/uploads/2019/01/logo-tim-autorizado-1.png\\\"></a>\\n    </div>\\n\\n    <div class=\\\"col-xs-offset-3 col-xs-8 col-sm-6 box-0800\\\">\\n     <span class=\\\"title\\\"> Ligue Agora </span>\\n     <span class=\\\"number\\\"> <a style=\\\"color: white;\\\" href=\\\"tel:08005914055\\\" onclick=\\\"return gtag_0800('tel:08005914055')\\\"> 0800 591 4055 </a></span>\\n   </div>\\n  </div>\\n  <div class=\\\"container\\\">\\n      <div class=\\\"board\\\">\\n          <!-- Navigation Area (Circular Tabs) -->\\n          <msw-navbar></msw-navbar>\\n          <!-- End Navigation Area (Circular Tabs) -->\\n\\n          <!-- Content Area -->\\n          <div class=\\\"tab-content\\\">\\n              <!-- Nested view  -->\\n              <router-outlet></router-outlet>\\n          </div>\\n          <!-- End Content Area -->\\n      </div>\\n  </div>\\n</section>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { FormDataService } from './data/formData.service';\n\n@Component ({\n    selector:     'multi-step-wizard-app'\n    ,templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n    title = 'Tim Promoção';\n    @Input() formData;\n\n    constructor(private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.formData = this.formDataService.getFormData();\n        // console.log(this.title + ' loaded!');\n    }\n}\n","import { CepService } from './services/cep.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n/* App Root */\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/* Feature Components */\nimport { LocationComponent } from './location/location.component';\nimport { PlanComponent } from './plan/plan.component';\nimport { PersonComponent } from './person/person.component';\nimport { ResultComponent } from './result/result.component';\nimport { CpfCnpjModule } from 'ng2-cpf-cnpj';\nimport { SlickModule } from 'ngx-slick';\n\n/* Routing Module */\nimport { AppRoutingModule } from './app-routing.module';\n\n/* Shared Service */\nimport { FormDataService } from './data/formData.service';\nimport { WorkflowService } from './workflow/workflow.service';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { EmailService } from './services/email.service';\nimport { PaymentComponent } from './payment/payment.component';\nimport { DataService } from './services/data.service';\n\n@NgModule({\n    imports:      [ BrowserModule,\n                    FormsModule,\n                    AppRoutingModule,\n                    HttpClientModule,\n                    CpfCnpjModule,\n                    NgxMaskModule.forRoot(),\n                    SlickModule.forRoot()\n                  ],\n    providers:    [\n      { provide: EmailService, useClass: EmailService },\n      { provide: CepService, useClass: CepService },\n      { provide: DataService, useClass: DataService },\n      { provide: FormDataService, useClass: FormDataService },\n      { provide: WorkflowService, useClass: WorkflowService }],\n    declarations: [ AppComponent, NavbarComponent, LocationComponent, PlanComponent, PersonComponent, ResultComponent, PaymentComponent ],\n    bootstrap:    [ AppComponent ]\n})\n\nexport class AppModule {}\n","export class FormData {\n    state = '';\n    city = '';\n    phone = '';\n    plan = {};\n    name = '';\n    cpf = '';\n    email = '';\n    birthday = '';\n    rg = '';\n    expe_date = '';\n    expe = '';\n    uf = '';\n    nasc = '';\n    phone_2 = '';\n    mother = '';\n    mainAddress: Address = {'cep': '', 'city': '', 'street': '', 'district': '', 'complement': '', 'number': '', 'ref': '', 'state': ''};\n    auxAddress: Address  = {'cep': '', 'city': '', 'street': '', 'district': '', 'complement': '', 'number': '', 'ref': '', 'state': ''};\n    bank: Bank = {'account': '', 'agency': '', 'bank': '', 'cpf': '', 'name': '', 'digit': ''};\n    clear() {\n      this.state = '';\n      this.city = '';\n      this.phone = '';\n      this.plan = {};\n      this.name = '';\n      this.cpf = '';\n      this.email = '';\n      this.birthday = '';\n      this.rg = '';\n      this.expe = '';\n      this.uf = '';\n      this.nasc = '';\n      this.phone_2 = '';\n      this.mother = '';\n      this.mainAddress = {'cep': '', 'city': '', 'street': '', 'district': '', 'complement': '', 'number': '', 'ref': '', 'state': ''};\n      this.auxAddress = {'cep': '', 'city': '', 'street': '', 'district': '', 'complement': '', 'number': '', 'ref': '', 'state': ''};\n    }\n}\n\nexport class Location {\n    state = '';\n    city = '';\n    phone = '';\n}\n\nexport class Person {\n    name = '';\n    cpf = '';\n    email = '';\n    birthday = '';\n    rg = '';\n    expe_date = '';\n    expe = '';\n    uf = '';\n    nasc = '';\n    phone = '';\n    phone_2 = '';\n    mother = '';\n}\n\nexport class Address {\n    cep = '';\n    street = '';\n    district = '';\n    city = '';\n    state = '';\n    number = '';\n    complement = '';\n    ref = '';\n}\n\nexport class Bank {\n  name = '';\n  bank = '';\n  account = '';\n  cpf = '';\n  agency = '';\n  digit = '';\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormData, Location, Person, Address, Bank } from './formData.model';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS } from '../workflow/workflow.model';\n\n@Injectable()\nexport class FormDataService {\n\n  private formData: FormData = new FormData();\n  private isLocationFormValid = false;\n  private isPlanFormValid = false;\n  private isPersonFormValid = false;\n  private isAddressFormValid = false;\n\n  constructor(private workflowService: WorkflowService) {\n  }\n\n  getLocation(): Location {\n    // Return the Location data\n    const location: Location = {\n      state: this.formData.state,\n      city: this.formData.city,\n      phone: this.formData.phone\n    };\n    return location;\n  }\n\n  setLocation(data: Location) {\n    // Update the Location data only when the Location Form had been validated successfully\n    this.isLocationFormValid = true;\n    this.formData.state = data.state;\n    this.formData.city = data.city;\n    this.formData.phone = data.phone;\n    // Validate Location Step in Workflow\n    this.workflowService.validateStep(STEPS.location);\n  }\n\n  getPlan(): object {\n    // Return the plan type\n    return this.formData.plan;\n  }\n\n  setPlan(data) {\n    // Update the plan type only when the Plan Form had been validated successfully\n    this.isPlanFormValid = true;\n    this.formData.plan = data;\n    // Validate Work Step in Workflow\n    this.workflowService.validateStep(STEPS.plan);\n  }\n\n  getPerson(): Person {\n    // Return the Person data\n    const person: Person = {\n      name: this.formData.name,\n      cpf: this.formData.cpf,\n      email: this.formData.email,\n      birthday: this.formData.birthday,\n      rg: this.formData.rg,\n      expe_date: this.formData.expe_date,\n      expe: this.formData.expe,\n      uf: this.formData.uf,\n      nasc: this.formData.nasc,\n      phone: this.formData.phone,\n      phone_2: this.formData.phone_2,\n      mother: this.formData.mother,\n    };\n    return person;\n  }\n\n  setPerson(data: Person) {\n    // Update the Person data only when the Person Form had been validated successfully\n    this.isPersonFormValid = true;\n    this.formData.name = data.name;\n    this.formData.cpf = data.cpf;\n    this.formData.email = data.email;\n    this.formData.birthday = data.birthday;\n    this.formData.rg = data.rg;\n    this.formData.expe_date = data.expe_date;\n    this.formData.expe = data.expe;\n    this.formData.uf = data.uf;\n    this.formData.nasc = data.nasc;\n    this.formData.phone = data.phone;\n    this.formData.phone_2 = data.phone_2;\n    this.formData.mother = data.mother;\n    // Validate Person Step in Workflow\n    this.workflowService.validateStep(STEPS.person);\n  }\n\n  getMainAddress(): Address {\n    // Return the Person data\n    const mainAddress: Address = {\n      cep: this.formData.mainAddress.cep,\n      street: this.formData.mainAddress.street,\n      district: this.formData.mainAddress.district,\n      city: this.formData.mainAddress.city,\n      state: this.formData.mainAddress.state,\n      number: this.formData.mainAddress.number,\n      complement: this.formData.mainAddress.complement,\n      ref: this.formData.mainAddress.ref,\n    };\n    return mainAddress;\n  }\n\n  setMainAddress(data: Address) {\n    // Update the Person data only when the Person Form had been validated successfully\n    this.isAddressFormValid = true;\n    this.formData.mainAddress.cep = data.cep;\n    this.formData.mainAddress.street = data.street;\n    this.formData.mainAddress.district = data.district;\n    this.formData.mainAddress.city = data.city;\n    this.formData.mainAddress.state = data.state;\n    this.formData.mainAddress.number = data.number;\n    this.formData.mainAddress.complement = data.complement;\n    this.formData.mainAddress.ref = data.ref;\n    // Validate Person Step in Workflow\n    // this.workflowService.validateStep(STEPS.person);\n  }\n\n  getAuxAddress(): Address {\n    // Return the Person data\n    const auxAddress: Address = {\n      cep: this.formData.auxAddress.cep,\n      street: this.formData.auxAddress.street,\n      district: this.formData.auxAddress.district,\n      city: this.formData.auxAddress.city,\n      state: this.formData.auxAddress.state,\n      number: this.formData.auxAddress.number,\n      complement: this.formData.auxAddress.complement,\n      ref: this.formData.auxAddress.ref,\n    };\n    return auxAddress;\n  }\n\n  getBank(): Bank {\n    // Return the Person data\n    const bank: Bank = {\n      name: this.formData.bank.name,\n      cpf: this.formData.bank.cpf,\n      agency: this.formData.bank.agency,\n      bank: this.formData.bank.bank,\n      account: this.formData.bank.account,\n      digit: this.formData.bank.digit,\n    };\n    return bank;\n  }\n\n\n  setAuxAddress(data: Address) {\n    // Update the Person data only when the Person Form had been validated successfully\n    this.isAddressFormValid = true;\n    this.formData.auxAddress.cep = data.cep;\n    this.formData.auxAddress.street = data.street;\n    this.formData.auxAddress.district = data.district;\n    this.formData.auxAddress.city = data.city;\n    this.formData.auxAddress.state = data.state;\n    this.formData.auxAddress.number = data.number;\n    this.formData.auxAddress.complement = data.complement;\n    this.formData.auxAddress.ref = data.ref;\n    // Validate Person Step in Workflow\n    // this.workflowService.validateStep(STEPS.person);\n  }\n\n  getFormData(): FormData {\n    // Return the entire Form Data\n    return this.formData;\n  }\n\n  resetFormData(): FormData {\n    // Reset the workflow\n    this.workflowService.resetSteps();\n    // Return the form data after all this.* members had been reset\n    this.formData.clear();\n    this.isLocationFormValid = this.isPlanFormValid = this.isPersonFormValid = false;\n    return this.formData;\n  }\n\n  isFormValid() {\n    // Return true if all forms had been validated successfully; otherwise, return false\n    return this.isLocationFormValid &&\n      this.isPlanFormValid &&\n      this.isPersonFormValid;\n  }\n}\n","module.exports = \"<form #locationForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n    <div class=\\\"tab-pane fade in active\\\">\\n        <h4 class=\\\"head text-center\\\">{{title}}</h4>\\n        <br/>\\n        <div class='row'>\\n            <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8'>\\n                <div class=\\\"row\\\">\\n                    <div class='col-xs-12 col-sm-6'>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"firstname\\\">Estado*</label>\\n                            <select class=\\\"form-control input-md\\\" #firstname=\\\"ngModel\\\" required id=\\\"state\\\" name=\\\"state\\\" type=\\\"text\\\" [(ngModel)]=\\\"location.state\\\" (change)=\\\"onChange($event)\\\">\\n                              <option  value=\\\"\\\"> Selecione uma opção </option>\\n                              <option *ngFor=\\\"let state of states\\\" value=\\\"{{ state.uf }}\\\"> {{ state.name }} </option>\\n                            </select>\\n                            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.state.invalid  && (location.state.dirty || location.state.touched))\\\">Selecione um estado.</div> -->\\n                        </div>\\n                    </div>\\n                    <div class='col-xs-12 col-sm-6'>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"lastname\\\">Cidade*</label>\\n                            <select class=\\\"form-control input-md\\\" #lastname=\\\"ngModel\\\" required id=\\\"city\\\" name=\\\"city\\\" type=\\\"text\\\" [(ngModel)]=\\\"location.city\\\">\\n                              <option  value=\\\"\\\"> Selecione uma opção </option>\\n                              <option *ngFor=\\\"let city of cities\\\" value=\\\"{{ city }}\\\"> {{ city }} </option>\\n                            </select>\\n                            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.city.invalid  && (location.city.dirty || location.city.touched))\\\">Selecione uma cidade.</div> -->\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\" for=\\\"email\\\">Celular*</label>\\n                    <input class=\\\"form-control input-md\\\" #email=\\\"ngModel\\\" required id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" minlength=\\\"10\\\" [(ngModel)]=\\\"location.phone\\\" mask=\\\"(00) 00000-0000\\\">\\n                    <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.phone.invalid  && (location.phone.dirty || location.phone.touched))\\\">Selecione uma cidade.</div> -->\\n                </div>\\n\\n                <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-outline-rounded\\\" [disabled]=\\\"!locationForm.valid\\\" (click)=\\\"goToNext(locationForm)\\\"> Continuar <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\n                </div>\\n\\n                <div class=\\\"form-group text-center\\\" [hidden]=\\\"!flagLocationWarning\\\">\\n                  <div class=\\\"alert alert-success\\\"> Ops! Ainda não conseguimos chegar até você =(\\n                    <br />\\n                    <br />\\n                    Mas não se preocupe, vamos avisar quando a TIM Live estiver disponível na sua região.\\n                   </div>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\"","import { EmailService } from './../services/email.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Location } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\n\nimport Brazil from '../../assets/data/brazil-states-cities.json';\n// import fourG from '../../assets/data/4g-tim.json';\n// import fibra from '../../assets/data/fibra-tim.json';\n\nimport { DataService } from '../services/data.service';\n\n@Component ({\n    // tslint:disable-next-line:component-selector\n    selector: 'mt-wizard-location',\n    templateUrl: './Location.component.html'\n})\n\nexport class LocationComponent implements OnInit {\n    title = 'Verifique nossa disponibilidade';\n    location: Location;\n    flagLocation = false;\n    flagLocationWarning = false;\n    states: any;\n    cities = [];\n    form: any;\n    fibra = [];\n    fourG = [];\n\n    constructor(private router: Router,\n      private formDataService: FormDataService,\n      private emailService: EmailService,\n      private dataService: DataService) {\n\n        this.states = Brazil.states;\n    }\n\n    ngOnInit() {\n      this.dataService.getData('4g-tim.json').subscribe(res => {\n        this.fourG = res;\n      });\n      this.dataService.getData('fibra-tim.json').subscribe(res => {\n        this.fibra = res;\n      });\n      this.location = this.formDataService.getLocation();\n    }\n\n    onChange(event) {\n       // tslint:disable-next-line:curly\n       this.states.map(data => { if (data.uf === this.location.state) this.cities = data.cities; });\n       this.flagLocationWarning = false;\n       this.flagLocation = false;\n    }\n\n    removeAcento (text) {\n        text = text.toLowerCase();\n        text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');\n        text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');\n        text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');\n        text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');\n        text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');\n        text = text.replace(new RegExp('[Ç]','gi'), 'c');\n        return text;\n    }\n\n    save(form: any): boolean {\n        // tslint:disable-next-line:curly\n        // tslint:disable-next-line:max-line-length\n        this.fourG.map(data => {if (this.removeAcento(data) === this.removeAcento(this.location.city.toUpperCase())) this.flagLocation = true; });\n        this.fibra.map(data => {if (this.removeAcento(data) === this.removeAcento(this.location.city.toUpperCase())) this.flagLocation = true; });\n\n        if (!form.valid) {\n          return false;\n        }else if (!this.flagLocation) {\n          this.flagLocationWarning = true;\n          return false;\n        }\n\n        this.formDataService.setLocation(this.location);\n        return true;\n    }\n\n    goToNext(form: any) {\n\n      const body =\n      '<h1> Dados do formulario: </h1>' +\n      '<h3> Dados do cliente: </h3>' +\n      '<p> Celular: ' + this.location.phone + '<?p>' +\n      '<p> Estado: ' + this.location.state + '<?p>' +\n      '<p> Cidade: ' + this.location.city + '<?p>';\n      if (this.save(form)) {\n        this.emailService.send('[TIM] Com Disponibilidade - ' + this.location.phone, body).subscribe(res => {\n            // Navigate to the plan page\n            this.router.navigate(['/plan']);\n        }, err => {});\n        this.dataService.sendDisponibility(this.location.phone, this.location.city, this.location.state).subscribe(res => {\n          console.log(res);\n        }, err => console.log(err));\n      }else {\n        this.emailService.send('[TIM] Sem Disponibilidade - ' + this.location.phone, body).subscribe(res => {\n      }, err => {});\n    }\n  }\n}\n\n","module.exports = \"<div class=\\\"board-inner\\\" id=\\\"status-buttons\\\">\\n    <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\">\\n        <div class=\\\"liner\\\"></div>\\n\\n        <!-- circular user icon -->\\n        <li>\\n            <a routerLink=\\\"/location\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\" data-toggle=\\\"tab\\\" title=\\\"location\\\">\\n                <span class=\\\"round-tabs one\\\">\\n                  <i class=\\\"glyphicon glyphicon-map-marker\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        <!-- circular tasks icon -->\\n         <li>\\n            <a routerLink=\\\"/plan\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"plan\\\">\\n                <span class=\\\"round-tabs two\\\">\\n                  <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        <!-- circular home icon -->\\n        <li>\\n            <a routerLink=\\\"/person\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"person\\\">\\n                <span class=\\\"round-tabs three\\\">\\n                    <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        <!-- circular ok icon -->\\n        <li>\\n            <a routerLink=\\\"/payment\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"completed\\\">\\n                <span class=\\\"round-tabs four\\\">\\n                  <i class=\\\"glyphicon glyphicon-ok\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n    </ul>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<!-- Close the Splash screen -->\\n<script src=\\\"assets/js/loading-bars.js\\\"></script>\\n\"","import { Component } from '@angular/core';\n\n@Component ({\n    selector: 'msw-navbar'\n    ,templateUrl: './navbar.component.html'\n})\n\nexport class NavbarComponent {}","module.exports = \"\"","module.exports = \"<form #pamentForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate [hidden]=\\\"end\\\">\\n  <div class=\\\"tab-pane fade in active\\\">\\n    <h4 class=\\\"head text-center\\\">{{title}}</h4>\\n    <br />\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8'>\\n        <div class=\\\"row box-radio\\\">\\n          <div class=\\\"form-group \\\">\\n            <div class=\\\"radio radio-payment\\\">\\n              <div class='col-xs-4 col-sm-4'>\\n                <label>\\n                  <img src=\\\"assets/images/online.jpg\\\">\\n                  <div class=\\\"radio-button\\\">\\n                      <input type=\\\"radio\\\" name=\\\"radio\\\" checked required name=\\\"typePayment\\\" [(ngModel)]=\\\"typePayment\\\" value=\\\"online\\\">\\n                      <span> Conta Online </span>\\n                  </div>\\n                </label>\\n              </div>\\n              <div class='col-xs-4 col-sm-4'>\\n                <label>\\n                  <img src=\\\"assets/images/debito.jpg\\\">\\n                  <div class=\\\"radio-button\\\">\\n                    <input type=\\\"radio\\\" required name=\\\"typePayment\\\" [(ngModel)]=\\\"typePayment\\\" value=\\\"debito\\\">\\n                    <span> Débito em Conta </span>\\n                  </div>\\n                </label>\\n              </div>\\n              <div class='col-xs-4 col-sm-4'>\\n                <label>\\n                  <img src=\\\"assets/images/bill.jpg\\\">\\n                  <div class=\\\"radio-button\\\">\\n                    <input type=\\\"radio\\\" required name=\\\"typePayment\\\" [(ngModel)]=\\\"typePayment\\\" value=\\\"boleto\\\">\\n                    <span> Boleto Bancário </span>\\n                  </div>\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"box-debito\\\" *ngIf=\\\"typePayment === 'debito'\\\">\\n          <div class=\\\"row\\\">\\n            <div class='col-xs-12 col-sm-8'>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Nome Completo</label>\\n                <input class=\\\"form-control input-md\\\" required id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"payment.name\\\"\\n                  placeholder=\\\"NOME COMPLETO\\\">\\n              </div>\\n            </div>\\n            <div class='col-xs-12 col-sm-4'>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">CPF</label>\\n                <input class=\\\"form-control input-md\\\"  #cpf=\\\"ngModel\\\"  required id=\\\"cpf\\\" name=\\\"cpf\\\" type=\\\"text\\\" placeholder=\\\"XXX.XXX.XXX-XX\\\"\\n                [(ngModel)]=\\\"payment.cpf\\\" [cpf]=\\\"payment.cpf\\\" mask=\\\"000.000.000-00\\\" minlength=\\\"11\\\" (focusout)=\\\"flagCpf = true\\\">\\n                  <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(cpf.invalid  && (cpf.dirty || cpf.touched) && flagCpf) \\\">CPF Incorreto.</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Banco</label>\\n                <select class=\\\"form-control input-md\\\" required id=\\\"bank\\\" name=\\\"bank\\\" type=\\\"text\\\" [(ngModel)]=\\\"payment.bank\\\">\\n                  <option  value=\\\"\\\"> Selecione uma opção </option>\\n                  <option *ngFor=\\\"let bank of banks\\\" value=\\\"{{ bank.type }}\\\"> {{ bank.name }} </option>\\n                </select>\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Agência</label>\\n                <input class=\\\"form-control input-md\\\" required id=\\\"agency\\\" name=\\\"agency\\\" type=\\\"text\\\" minlength=\\\"5\\\"\\n                  [(ngModel)]=\\\"payment.agency\\\" mask=\\\"0000-0\\\" placeholder=\\\"XXXX-X\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Conta</label>\\n                <input class=\\\"form-control input-md\\\" required id=\\\"account\\\" name=\\\"account\\\" type=\\\"text\\\" minlength=\\\"3\\\"\\n                  [(ngModel)]=\\\"payment.account\\\" placeholder=\\\"XXXXXXX\\\">\\n                <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.phone.invalid  && (location.phone.dirty || location.phone.touched))\\\">Selecione uma cidade.</div> -->\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Digito</label>\\n                <input class=\\\"form-control input-md\\\" required id=\\\"digit\\\" name=\\\"digit\\\" type=\\\"text\\\" minlength=\\\"1\\\"\\n                  [(ngModel)]=\\\"payment.digit\\\"  placeholder=\\\"X\\\">\\n                <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.phone.invalid  && (location.phone.dirty || location.phone.touched))\\\">Selecione uma cidade.</div> -->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"box-account\\\" *ngIf=\\\"typePayment === 'online'\\\">\\n          <img src=\\\"assets/images/i.jpg\\\">\\n          Você Receberá o boleto de mensalidade no e-mail cadastrado.\\n        </div>\\n\\n        <div class=\\\"box-bill\\\" *ngIf=\\\"typePayment === 'boleto'\\\">\\n          <img src=\\\"assets/images/i.jpg\\\">\\n\\n          Você Receberá o boleto de mensalidade no endereço cadastrado.\\n        </div>\\n\\n        <div class='row'>\\n          <div class='col-xs-12 col-sm-12'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Selecione a data de vencimento da fatura</label>\\n              <select class=\\\"form-control input-md\\\" required id=\\\"dateEnd\\\" name=\\\"dateEnd\\\" type=\\\"text\\\" [(ngModel)]=\\\"dateEnd\\\">\\n                <option  value=\\\"\\\"> Selecione uma opção </option>\\n                <option value=\\\"07\\\"> 07 </option>\\n                <option value=\\\"10\\\"> 10 </option>\\n                <option value=\\\"12\\\"> 12 </option>\\n                <option value=\\\"15\\\"> 15 </option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class='col-xs-12 col-sm-8'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Nome Completo</label>\\n              <input class=\\\"form-control input-md\\\" required id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"name1\\\"\\n                placeholder=\\\"NOME COMPLETO\\\">\\n            </div>\\n          </div>\\n          <div class='col-xs-12 col-sm-4'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Telefone</label>\\n              <input class=\\\"form-control input-md\\\" required id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" placeholder=\\\"(00) 00000-0000\\\"\\n              [(ngModel)]=\\\"phone1\\\" minlength=\\\"11\\\" mask=\\\"(00) 00000-0000\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class='col-xs-12 col-sm-8'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Nome Completo</label>\\n              <input class=\\\"form-control input-md\\\" required id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"name2\\\"\\n                placeholder=\\\"NOME COMPLETO\\\">\\n            </div>\\n          </div>\\n          <div class='col-xs-12 col-sm-4'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Telefone</label>\\n              <input class=\\\"form-control input-md\\\" required id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" placeholder=\\\"(00) 00000-0000\\\"\\n              [(ngModel)]=\\\"phone2\\\" minlength=\\\"11\\\" mask=\\\"(00) 00000-0000\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class='col-xs-12 col-sm-12'>\\n            <label>\\n              O modem sera enviado via Fedex para o seu endereço, somente as pessoas acima citadas poderão receber o mesmo.\\n            </label>\\n          </div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-xs-12 col-sm-12'>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"checkbox\\\">\\n                <label>\\n                  <input type=\\\"checkbox\\\" required name=\\\"terms\\\" value=\\\"false\\\" [(ngModel)]=\\\"terms\\\">\\n                  <strong> Li e concordo com o <a target=\\\"_blank\\\" href=\\\"https://assineliveinternet.com/wp-content/uploads/2019/01/REGULAMENTO_TIM_INTERNET_CASA.pdf\\\"> Contrato de Permanência TIM Live</a>, <a target=\\\"_blank\\\" href=\\\"https://assineliveinternet.com/wp-content/uploads/2019/01/INSTRUMENTO_PARTICULAR_COMODATO_MODEM.pdf\\\">Instrumento de Comodato TIM Live</a> e\\n                    autorizo a TIM entrar em contato comigo nos telefones informados.</strong>\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-success btn-outline-rounded\\\" [disabled]=\\\"!pamentForm.valid || !typePayment || !terms\\\"\\n          (click)=\\\"goToNext(pamentForm)\\\" onclick=\\\"return gtag_end()\\\">\\n            Finalizar <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n<div class=\\\"tab-pane fade in active\\\" [hidden]=\\\"!end\\\">\\n    <h3 class=\\\"head text-center\\\"> Obrigado pela preferência! </h3>\\n    <h4 class=\\\"text-center\\\">\\n        Olá {{ person.name }},\\n    </h4>\\n    <p class=\\\"narrow text-center\\\">\\n        Em breve nossos atendentes vão entrar em contato com você.\\n    </p>\\n    <br />\\n    <br />\\n    <br />\\n</div>\\n\"","import { EmailService } from './../services/email.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Bank, Person, Address } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\n\n// import Banks from '../../assets/data/banks.json';\n\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\n\nexport class PaymentComponent implements OnInit {\n\n    title = 'FORMA DE PAGAMENTO';\n    payment: Bank;\n    person: Person;\n    mainAddress: Address;\n    auxAddress: Address;\n    name1: string; phone1: string; name2: string; phone2: string;\n    dateEnd = '';\n    typePayment: any;\n    banks: any;\n    form: any;\n    plan: any;\n    end = false;\n    terms: any;\n    flagCpf = false;\n\n    constructor(\n      private router: Router,\n      private formDataService: FormDataService,\n      private emailService: EmailService,\n      private dataService: DataService) {\n        this.dataService.getData('banks.json').subscribe(res => {\n          this.banks = res;\n        });\n    }\n\n    ngOnInit() {\n        this.payment = this.formDataService.getBank();\n        this.plan = this.formDataService.getPlan();\n        this.person = this.formDataService.getPerson();\n        this.mainAddress = this.formDataService.getMainAddress();\n        this.auxAddress = this.formDataService.getAuxAddress();\n    }\n\n\n    save(form: any): boolean {\n        // tslint:disable-next-line:curly\n        // tslint:disable-next-line:max-line-length\n        // this.formDataService.setLocation(this.location);\n        return true;\n    }\n\n    goToNext(form: any) {\n      const body =\n        '<h1> Dados do formulario: </h1>' +\n        '<h3> Dados do cliente: </h3>' +\n        '<p> Nome Completo: ' + this.person.name + '</p>' +\n        '<p> CPF: ' + this.person.cpf + '</p>' +\n        '<p> Email: ' + this.person.email + '</p>' +\n        '<p> Dada de Nascimento: ' + this.person.birthday + '</p>' +\n        '<p> RG:' + this.person.rg + '</p>' +\n        '<p> Data de expedição:' + this.person.expe_date + '</p>' +\n        '<p> Orgão expedidor: ' + this.person.expe + '</p>' +\n        '<p> UF expedição:' + this.person.uf + '</p>' +\n        '<p> Nascionalidade:' + this.person.nasc + '</p>' +\n        '<p> Celular: ' + this.person.phone + '</p>' +\n        '<p> Telefone: ' + this.person.phone_2 + '</p>' +\n        '<p> Nome da Mãe:' + this.person.mother + '</p>' +\n        '<h3> Endereço: </h3>' +\n        '<p> CEP:' + this.mainAddress.cep + '</p>' +\n        '<p> Rua:' + this.mainAddress.street + '</p>' +\n        '<p> Bairro:' + this.mainAddress.district + '</p>' +\n        '<p> Cidade:' + this.mainAddress.city + '</p>' +\n        '<p> Estado:' + this.mainAddress.state + '</p>' +\n        '<p> Número:' + this.mainAddress.number + '</p>' +\n        '<p> Complemento:' + this.mainAddress.complement + '</p>' +\n        '<p> Referência:' + this.mainAddress.ref + '</p>' +\n        '<h3> Endereço de Instalação: </h3>' +\n        '<p> CEP:' + this.auxAddress.cep + '</p>' +\n        '<p> Rua:' + this.auxAddress.street + '</p>' +\n        '<p> Bairro:' + this.auxAddress.district + '</p>' +\n        '<p> Cidade:' + this.auxAddress.city + '</p>' +\n        '<p> Estado:' + this.auxAddress.state + '</p>' +\n        '<p> Número:' + this.auxAddress.number + '</p>' +\n        '<p> Complemento:' + this.auxAddress.complement + '</p>' +\n        '<p> Referência:' + this.auxAddress.ref + '</p>' +\n        '<h3> Plano: </h3>' +\n        '<p> ID:' + this.plan.id + '</p>' +\n        '<p> Tipo:' + this.plan.type + '</p>' +\n        '<p> Plano:' + this.plan.franquia + ' ' + this.plan.franquia_desc + '</p>' +\n        '<p> Valor:' + this.plan.valor + ',' + this.plan.centavos + '</p>' +\n        '<h3> Forma de Pagamento: </h3>' +\n        '<p> Tipo: ' + this.typePayment + '</p>' +\n        '<p> Nome Completo: ' + this.payment.name + '</p>' +\n        '<p> CPF: ' + this.payment.cpf + '</p>' +\n        '<p> Banco: ' + this.payment.bank + '</p>' +\n        '<p> Agencia: ' + this.payment.agency + '</p>' +\n        '<p> Conta: ' + this.payment.account + '</p>' +\n        '<p> Digito: ' + this.payment.digit + '</p>' +\n        '<h3> Vencimento da Fatura: ' + this.dateEnd + '</h3>' +\n        '<p> Nome Completo: ' + this.name1 + '</p>' +\n        '<p> Telefone: ' + this.phone1 + '</p>' +\n        '<p> Nome Completo: ' + this.name2 + '</p>' +\n        '<p> Telefone: ' + this.phone2 + '</p>';\n      if (this.save(form)) {\n          this.emailService.send('4 - [TIM] Contrate Agora - ' + this.person.phone, body).subscribe(res => {\n            this.end = true;\n          }, err => {});\n      }\n    }\n}\n","module.exports = \"<form #personForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n  <div class=\\\"tab-pane fade in active\\\">\\n    <h4 class=\\\"head text-center\\\"> DADOS PESSOAIS </h4>\\n    <br />\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-8'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nome Completo</label>\\n            <input class=\\\"form-control input-md\\\" required id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Nome Completo\\\"\\n              [(ngModel)]=\\\"person.name\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-4'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">CPF</label>\\n            <input class=\\\"form-control input-md\\\"  #cpf=\\\"ngModel\\\"  required id=\\\"cpf\\\" name=\\\"cpf\\\" type=\\\"text\\\" placeholder=\\\"CPF\\\" [(ngModel)]=\\\"person.cpf\\\" [cpf]=\\\"person.cpf\\\"\\n              mask=\\\"000.000.000-00\\\" minlength=\\\"11\\\" (focusout)=\\\"flagCpf = true\\\">\\n            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(cpf.invalid  && (cpf.dirty || cpf.touched) && flagCpf) \\\">CPF Incorreto.</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-8'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Email</label>\\n            <input class=\\\"form-control input-md\\\" required id=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\"\\n              [(ngModel)]=\\\"person.email\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-4'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Data de Nascimento</label>\\n            <input class=\\\"form-control input-md\\\" required id=\\\"birthday\\\" name=\\\"birthday\\\" type=\\\"text\\\" placeholder=\\\"dd/mm/aaaa\\\"\\n              [(ngModel)]=\\\"person.birthday\\\" minlength=\\\"8\\\" mask=\\\"00/00/0000\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">RG</label>\\n            <input class=\\\"form-control input-md\\\" required id=\\\"rg\\\" name=\\\"rg\\\" type=\\\"text\\\" placeholder=\\\"RG\\\" [(ngModel)]=\\\"person.rg\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Data de expedição</label>\\n            <input class=\\\"form-control input-md\\\" required id=\\\"expe_date\\\" name=\\\"expe_date\\\" type=\\\"text\\\" placeholder=\\\"dd/mm/aaaa\\\" [(ngModel)]=\\\"person.expe_date\\\"\\n            minlength=\\\"8\\\" mask=\\\"00/00/0000\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Órgão expedidor <a target=\\\"_blank\\\" href=\\\"https://www.significados.com.br/orgao-expedidor/\\\"> <i class=\\\"glyphicon glyphicon-info-sign\\\"></i> </a></label>\\n            <select class=\\\"form-control input-md\\\" required id=\\\"expe\\\" name=\\\"expe\\\" type=\\\"text\\\" placeholder=\\\"Expedidor\\\" [(ngModel)]=\\\"person.expe\\\">\\n                <option  value=\\\"\\\" selected> Selecione uma opção </option>\\n                <option value=\\\"ssp\\\"> Secretaria da Segurança Pública (SSP) </option>\\n                <option value=\\\"CNIg\\\"> Conselho Nacional de Imigração (CNIg) </option>\\n                <option value=\\\"CGPI\\\"> Coordenação-Geral de Privilégios e Imunidades (CGPI) </option>\\n                <option value=\\\"DPF\\\"> Departamento de Polícia Federal (DPF) </option>\\n                <option value=\\\"MAE\\\"> Ministério da Marinha (MAE) </option>\\n                <option value=\\\"MAE\\\"> Ministério da Aeronáutica (MAE) </option>\\n                <option value=\\\"MEX\\\"> Ministério do Exército (MEX) </option>\\n                <option value=\\\"outros\\\"> Outros </option>\\n              </select>\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Estado*</label>\\n            <select class=\\\"form-control input-md\\\" required id=\\\"uf\\\" name=\\\"uf\\\" type=\\\"text\\\" [(ngModel)]=\\\"person.uf\\\">\\n              <option  value=\\\"\\\" > Selecione uma opção </option>\\n              <option *ngFor=\\\"let state of states\\\" value=\\\"{{ state.uf }}\\\"> {{ state.name }} </option>\\n            </select>\\n            <!-- <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!(location.state.invalid  && (location.state.dirty || location.state.touched))\\\">Selecione um estado.</div> -->\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-6'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nacionalidade</label>\\n            <select class=\\\"form-control input-md\\\" required id=\\\"nasc\\\" name=\\\"nasc\\\" type=\\\"text\\\" [(ngModel)]=\\\"person.nasc\\\">\\n              <option  value=\\\"\\\" > Selecione uma opção </option>\\n              <option value=\\\"brasileiro\\\"> Brasileiro </option>\\n              <option value=\\\"estrangeiro\\\"> Estrangeiro </option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Celular para contato</label>\\n            <input class=\\\"form-control input-md\\\" required id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" placeholder=\\\"(00) 00000-0000\\\"\\n              [(ngModel)]=\\\"person.phone\\\" minlength=\\\"11\\\" mask=\\\"(00) 00000-0000\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-3'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Telefone para contato</label>\\n            <input class=\\\"form-control input-md\\\" id=\\\"phone_2\\\" name=\\\"phone_2\\\" type=\\\"text\\\" placeholder=\\\"(00) 0000-0000\\\"\\n              [(ngModel)]=\\\"person.phone_2\\\" mask=\\\"(00) 00000-0000\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-12'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Nome completo da Mãe</label>\\n            <input class=\\\"form-control input-md\\\" required id=\\\"mother\\\" name=\\\"mother\\\" type=\\\"text\\\" placeholder=\\\"Nome completo da Mãe\\\"\\n              [(ngModel)]=\\\"person.mother\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <br />\\n    <h4 class=\\\"head text-center\\\"> ENDEREÇO </h4>\\n    <br />\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-4'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">CEP <a target=\\\"_blank\\\" href=\\\"http://www.buscacep.correios.com.br/sistemas/buscacep/\\\"> <i class=\\\"glyphicon glyphicon-info-sign\\\"></i> </a> </label>\\n            <input class=\\\"form-control input-md\\\" #cep=\\\"ngModel\\\" required name=\\\"mainCep\\\" type=\\\"text\\\" minlength=\\\"8\\\" placeholder=\\\"00000-000\\\"\\n              mask=\\\"00000-000\\\" [(ngModel)]=\\\"mainAddress.cep\\\" (focusout)=\\\"getMainAddress()\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-8'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Rua</label>\\n            <input class=\\\"form-control input-md\\\" required name=\\\"mainStreet\\\" type=\\\"text\\\" placeholder=\\\"Rua\\\" [(ngModel)]=\\\"mainAddress.street\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-4'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Bairro</label>\\n            <input class=\\\"form-control input-md\\\" required name=\\\"mainDistrict\\\" type=\\\"text\\\" placeholder=\\\"Bairro\\\"\\n              [(ngModel)]=\\\"mainAddress.district\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-6'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Cidade</label>\\n            <input class=\\\"form-control input-md\\\" required name=\\\"mainCity\\\" type=\\\"text\\\" placeholder=\\\"Cidade\\\" [(ngModel)]=\\\"mainAddress.city\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-2'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Estado</label>\\n            <input class=\\\"form-control input-md\\\" required type=\\\"text\\\" name=\\\"mainState\\\" placeholder=\\\"Estado\\\" [(ngModel)]=\\\"mainAddress.state\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-4'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Número</label>\\n            <input class=\\\"form-control input-md\\\" required name=\\\"mainNumber\\\" type=\\\"text\\\" placeholder=\\\"Número\\\"\\n              [(ngModel)]=\\\"mainAddress.number\\\">\\n          </div>\\n        </div>\\n        <div class='col-xs-12 col-sm-8'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Complemento</label>\\n            <input class=\\\"form-control input-md\\\" type=\\\"text\\\" name=\\\"mainComplement\\\" placeholder=\\\"Complemento\\\"\\n              [(ngModel)]=\\\"mainAddress.complement\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-12'>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Ponto de referência</label>\\n            <input class=\\\"form-control input-md\\\" type=\\\"text\\\" name=\\\"mainRef\\\" placeholder=\\\"Ponto de referência\\\"\\n              [(ngModel)]=\\\"mainAddress.ref\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n        <div class='col-xs-12 col-sm-12'>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"checkbox\\\">\\n              <label>\\n                <input type=\\\"checkbox\\\" name=\\\"flagAddress\\\" [(ngModel)]=\\\"flagAddress\\\" value=\\\"false\\\">\\n                <strong> Meu endereço de faturamento é diferente do endereço de instalação.</strong>\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"flagAddress\\\">\\n      <br />\\n      <h4 class=\\\"head text-center\\\"> ENDEREÇO DE INSTALAÇÃO </h4>\\n      <br />\\n      <div class='row'>\\n        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n          <div class='col-xs-12 col-sm-4'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">CEP <a target=\\\"_blank\\\" href=\\\"http://www.buscacep.correios.com.br/sistemas/buscacep/\\\"> <i class=\\\"glyphicon glyphicon-info-sign\\\"></i> </a></label>\\n              <input class=\\\"form-control input-md\\\" required name=\\\"auxCep\\\" type=\\\"text\\\" minlength=\\\"8\\\" placeholder=\\\"00000-000\\\"\\n                mask=\\\"00000-000\\\" [(ngModel)]=\\\"auxAddress.cep\\\" (focusout)=\\\"getAuxAddress()\\\">\\n            </div>\\n          </div>\\n          <div class='col-xs-12 col-sm-8'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Rua</label>\\n              <input class=\\\"form-control input-md\\\" required name=\\\"auxStreet\\\" type=\\\"text\\\" placeholder=\\\"Rua\\\" [(ngModel)]=\\\"auxAddress.street\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class='row'>\\n        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n          <div class='col-xs-12 col-sm-4'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Bairro</label>\\n              <input class=\\\"form-control input-md\\\" required name=\\\"auxDistrict\\\" type=\\\"text\\\" placeholder=\\\"Bairro\\\"\\n                [(ngModel)]=\\\"auxAddress.district\\\">\\n            </div>\\n          </div>\\n          <div class='col-xs-12 col-sm-6'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Cidade</label>\\n              <input class=\\\"form-control input-md\\\" required name=\\\"auxCity\\\" type=\\\"text\\\" placeholder=\\\"Cidade\\\"\\n                [(ngModel)]=\\\"auxAddress.city\\\">\\n            </div>\\n          </div>\\n          <div class='col-xs-12 col-sm-2'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Estado</label>\\n              <input class=\\\"form-control input-md\\\" required type=\\\"text\\\" name=\\\"auxState\\\" placeholder=\\\"Estado\\\" [(ngModel)]=\\\"auxAddress.state\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class='row'>\\n        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n          <div class='col-xs-12 col-sm-4'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Número</label>\\n              <input class=\\\"form-control input-md\\\" required name=\\\"auxNumber\\\" type=\\\"text\\\" placeholder=\\\"Número\\\"\\n                [(ngModel)]=\\\"auxAddress.number\\\">\\n            </div>\\n          </div>\\n          <div class='col-xs-12 col-sm-8'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Complemento</label>\\n              <input class=\\\"form-control input-md\\\" type=\\\"text\\\" name=\\\"auxComplement\\\" placeholder=\\\"Complemento\\\"\\n                [(ngModel)]=\\\"auxAddress.complement\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class='row'>\\n        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-1 col-sm-10'>\\n          <div class='col-xs-12 col-sm-12'>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Ponto de referência</label>\\n              <input class=\\\"form-control input-md\\\" type=\\\"text\\\" name=\\\"auxRef\\\" placeholder=\\\"Ponto de referência\\\"\\n                [(ngModel)]=\\\"auxAddress.ref\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='row'>\\n      <div class=\\\"form-group text-center\\\">\\n        <button class=\\\"btn btn-outline-rounded btn-success\\\" (click)=\\\"goToNext(personForm)\\\">\\n          Continuar <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import { CepService } from './../services/cep.service';\nimport { EmailService } from './../services/email.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Person, Address } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\nimport Brazil from '../../assets/data/brazil-states-cities.json';\n\n@Component ({\n    // tslint:disable-next-line:component-selector\n    selector:     'mt-wizard-person',\n    templateUrl: './person.component.html'\n})\n\nexport class PersonComponent implements OnInit {\n    // title = 'Where do you live?';\n    person: Person;\n    flagAddress = false;\n    flagCpf = false;\n    mainAddress: Address;\n    auxAddress: Address;\n    dateEnd = '';\n    states: any;\n    form: any;\n\n    constructor(private router: Router,\n      private formDataService: FormDataService,\n      private cepService: CepService,\n      private emailService: EmailService) {\n      this.states = Brazil.states;\n\n    }\n\n    ngOnInit() {\n      this.person = this.formDataService.getPerson();\n      this.mainAddress = this.formDataService.getMainAddress();\n      this.auxAddress = this.formDataService.getAuxAddress();\n    }\n\n    save(form: any): boolean {\n      if (!form.valid) {\n          return false;\n      }\n\n      this.formDataService.setMainAddress(this.mainAddress);\n      this.formDataService.setAuxAddress(this.auxAddress);\n      this.formDataService.setPerson(this.person);\n      return true;\n    }\n\n    getMainAddress() {\n      this.cepService.get(this.mainAddress.cep).subscribe(res => {\n        this.mainAddress.street = res.logradouro;\n        this.mainAddress.city = res.localidade;\n        this.mainAddress.state = res.uf;\n        this.mainAddress.district = res.bairro;\n      });\n    }\n\n    getAuxAddress() {\n      this.cepService.get(this.auxAddress.cep).subscribe(res => {\n        this.auxAddress.street = res.logradouro;\n        this.auxAddress.city = res.localidade;\n        this.auxAddress.state = res.uf;\n        this.auxAddress.district = res.bairro;\n      });\n    }\n\n    goToPrevious(form: any) {\n        if (this.save(form)) {\n            // Navigate to the plan page\n            this.router.navigate(['/plan']);\n        }\n    }\n\n    goToNext(form: any) {\n        if (!this.flagAddress) {\n          this.auxAddress = this.mainAddress;\n        }\n        const body =\n          '<h1> Dados do formulario: </h1>' +\n          '<h3> Dados do cliente: </h3>' +\n          '<p> Nome Completo: ' + this.person.name + '</p>' +\n          '<p> CPF: ' + this.person.cpf + '</p>' +\n          '<p> Email: ' + this.person.email + '</p>' +\n          '<p> Dada de Nascimento: ' + this.person.birthday + '</p>' +\n          '<p> RG:' + this.person.rg + '</p>' +\n          '<p> Orgão expedidor: ' + this.person.expe + '</p>' +\n          '<p> UF expedição:' + this.person.uf + '</p>' +\n          '<p> Nascionalidade:' + this.person.nasc + '</p>' +\n          '<p> Celular: ' + this.person.phone + '</p>' +\n          '<p> Telefone: ' + this.person.phone_2 + '</p>' +\n          '<p> Nome da Mãe:' + this.person.mother + '</p>' +\n          '<h3> Endereço: </h3>' +\n          '<p> CEP:' + this.mainAddress.cep + '</p>' +\n          '<p> Rua:' + this.mainAddress.street + '</p>' +\n          '<p> Bairro:' + this.mainAddress.district + '</p>' +\n          '<p> Cidade:' + this.mainAddress.city + '</p>' +\n          '<p> Estado:' + this.mainAddress.state + '</p>' +\n          '<p> Número:' + this.mainAddress.number + '</p>' +\n          '<p> Complemento:' + this.mainAddress.complement + '</p>' +\n          '<p> Referência:' + this.mainAddress.ref + '</p>' +\n          '<h3> Endereço de Instalação: </h3>' +\n          '<p> CEP:' + this.auxAddress.cep + '</p>' +\n          '<p> Rua:' + this.auxAddress.street + '</p>' +\n          '<p> Bairro:' + this.auxAddress.district + '</p>' +\n          '<p> Cidade:' + this.auxAddress.city + '</p>' +\n          '<p> Estado:' + this.auxAddress.state + '</p>' +\n          '<p> Número:' + this.auxAddress.number + '</p>' +\n          '<p> Complemento:' + this.auxAddress.complement + '</p>' +\n          '<p> Referência:' + this.auxAddress.ref + '</p>';\n        if (this.save(form)) {\n            this.emailService.send('[TIM] Contrate Agora - ' + this.person.phone, body).subscribe(res => {\n              // Navigate to the result page\n              this.router.navigate(['/payment']);\n            }, err => {});\n        }\n    }\n}\n","module.exports = \"<form #planForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n  <div class=\\\"form-horizontal\\\">\\n    <div class=\\\"tab-pane fade in active\\\">\\n      <h4 class=\\\"head text-center\\\">{{title}}</h4>\\n      <div class='row' *ngIf=\\\"flagFibra\\\" style=\\\"padding-bottom: 20px;\\\">\\n        <h4 class=\\\"head text-center\\\"> PLANOS TIM FIBRA </h4>\\n\\n        <!-- You can now use your library component in app.component.html -->\\n        <ngx-slick class=\\\"carousel col-xs-12 col-sm-offset-2 col-sm-8\\\" #slickModal=\\\"slick-modal\\\" [config]=\\\"slideConfig\\\">\\n          <div ngxSlickItem class=\\\"plan-box\\\" *ngFor=\\\"let item of plans?.fibra\\\">\\n            <div class=\\\"box-header\\\">\\n              <span class=\\\"title\\\"> <b>{{ item.franquia }}</b>{{ item.franquia_desc }} </span>\\n              <span class=\\\"description\\\"> DE VELOCIDADE </span>\\n            </div>\\n            <div class=\\\"box-benefits\\\">\\n              <span class=\\\"title\\\"> Voz fixo ilimitada Brasil </span>\\n              <span class=\\\"channels\\\"> {{ item.canais }} </span>\\n              <span class=\\\"tv-partners\\\"> Parceiros de vídeo </span>\\n              <div class=\\\"tv-partners-img\\\">\\n                <img *ngFor=\\\"let img of item.imagens\\\" src=\\\"{{ img }}\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n              <span *ngIf=\\\"item.promocao.flag\\\" class=\\\"promotion\\\"> <label>de R$ {{ item.promocao.valor }}</label> por\\n              </span>\\n              <span class=\\\"value\\\">\\n                <label class=\\\"type\\\">R$</label>\\n                <label class=\\\"price\\\">{{ item.valor }}</label>\\n                <label class=\\\"cents\\\">,{{ item.centavos }}</label>\\n                <label class=\\\"month\\\">/MÊS</label> </span>\\n              <span *ngIf=\\\"item.promocao.flag\\\" class=\\\"validate\\\"> {{ item.promocao.validate }} </span>\\n              <span class=\\\"tax\\\"> Taxa de Habilitação: {{ item.taxa }} </span>\\n              <button (click)=\\\"goToNext(item)\\\"> Selecionar <br /> Plano </button>\\n              <span class=\\\"download\\\"> Velocidade de Download: {{ item.download }} </span>\\n              <span class=\\\"upload\\\"> Velocidade de upload: {{ item.upload }} </span>\\n            </div>\\n            <!-- <div class=\\\"box-footer\\\">\\n                <span class=\\\"title\\\"> Mais Beneficios </span>\\n              </div> -->\\n          </div>\\n        </ngx-slick>\\n      </div>\\n      <div class='row' *ngIf=\\\"flag4G\\\" style=\\\"padding-bottom: 20px;\\\">\\n        <h4 class=\\\"head text-center\\\"> PLANOS TIM 4G </h4>\\n        <ngx-slick class=\\\"carousel col-xs-12 col-sm-offset-2 col-sm-8\\\" #slickModal=\\\"slick-modal\\\" [config]=\\\"slideConfig\\\">\\n          <div ngxSlickItem class=\\\"plan-box\\\" *ngFor=\\\"let item of plans?.fourG\\\">\\n            <div class=\\\"box-header\\\">\\n              <span class=\\\"title\\\"> <b>{{ item.franquia }}</b>{{ item.franquia_desc }} </span>\\n            </div>\\n            <div class=\\\"box-benefits\\\">\\n              <span class=\\\"title\\\"> Velocidade de Download: {{ item.download }} </span>\\n              <span class=\\\"title\\\"> Velocidade de upload: {{ item.upload }} </span>\\n              <span class=\\\"title\\\" style=\\\"padding-bottom: 20px;\\\"> Franquia: {{ item.franquia }} {{ item.franquia_desc }} </span>\\n              <span class=\\\"channels\\\"> MODEM EM COMODADATO </span>\\n              <div class=\\\"tv-partners-img\\\" >\\n                <img style=\\\"width: 100px;\\\" src=\\\"https://assineliveinternet.com/wp-content/uploads/2019/01/tim-protect-modal.png\\\">\\n                <img style=\\\"width: 100px;\\\" src=\\\"https://assineliveinternet.com/wp-content/uploads/2019/01/plugueenavegue.png\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n              <span *ngIf=\\\"item.promocao.flag\\\" class=\\\"promotion\\\"> <label>de R$ {{ item.promocao.valor }}</label> por\\n              </span>\\n              <span class=\\\"value\\\">\\n                <label class=\\\"type\\\">R$</label>\\n                <label class=\\\"price\\\">{{ item.valor }}</label>\\n                <label class=\\\"cents\\\">,{{ item.centavos }}</label>\\n                <label class=\\\"month\\\">/MÊS</label>\\n              </span>\\n              <!-- <span *ngIf=\\\"item.promocao.flag\\\" class=\\\"validate\\\"> {{ item.promocao.validade }} </span> -->\\n              <span class=\\\"tax\\\"> {{ item.taxa }} </span>\\n              <button (click)=\\\"goToNext(item)\\\"> Selecionar <br /> Plano </button>\\n            </div>\\n            <!-- <div class=\\\"box-footer\\\">\\n                <span class=\\\"title\\\"> Mais Beneficios </span>\\n              </div> -->\\n          </div>\\n        </ngx-slick>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FormDataService } from '../data/formData.service';\n// import Plans from '../../assets/data/plans.json';\n// import fourG from '../../assets/data/4g-tim.json';\n// import fibra from '../../assets/data/fibra-tim.json';\nimport { Location } from '../data/formData.model';\nimport { DataService } from '../services/data.service';\n\n@Component ({\n    // tslint:disable-next-line:component-selector\n    selector:     'mt-wizard-plan',\n    templateUrl: './plan.component.html'\n})\n\nexport class PlanComponent implements OnInit {\n    title = 'SELECIONE UM PLANO';\n    plans: any;\n    location: Location;\n    flag4G = false;\n    flagFibra = false;\n    fourG = [];\n    fibra = [];\n    plan = {};\n    form: any;\n    slideConfig = {\n      slidesToShow: 1,\n      slidesToScroll: 1,\n     };\n\n    constructor(private router: Router,\n      private formDataService: FormDataService,\n      private dataService: DataService) {\n\n    }\n\n    ngOnInit() {\n        this.plan = this.formDataService.getPlan();\n        this.location = this.formDataService.getLocation();\n        this.dataService.getData('plans.json').subscribe(res => {\n          this.plans = res;\n        });\n        this.dataService.getData('4g-tim.json').subscribe(res => {\n          this.fourG = res;\n          // tslint:disable-next-line:max-line-length\n          this.fourG.map(data => {if (this.removeAcento(data) === this.removeAcento(this.location.city.toUpperCase())) this.flag4G = true; });\n        });\n        this.dataService.getData('fibra-tim.json').subscribe(res => {\n          this.fibra = res;\n          // tslint:disable-next-line:max-line-length\n          this.fibra.map(data => {if (this.removeAcento(data) === this.removeAcento(this.location.city.toUpperCase())) this.flagFibra = true; });\n        });\n    }\n\n    removeAcento (text) {\n      text = text.toLowerCase();\n      text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');\n      text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');\n      text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');\n      text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');\n      text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');\n      text = text.replace(new RegExp('[Ç]','gi'), 'c');\n      return text;\n    }\n\n    save(form: any): boolean {\n        // if (!form.valid) {\n        //     return false;\n        // }\n\n        this.formDataService.setPlan(form);\n        return true;\n    }\n\n    goToPrevious(form: any) {\n        if (this.save(form)) {\n            // Navigate to the location page\n            this.router.navigate(['/location']);\n        }\n    }\n\n    goToNext(form: any) {\n      if (this.save(form)) {\n          // Navigate to the person page\n          this.router.navigate(['/person']);\n      }\n    }\n}\n","module.exports = \"<div class=\\\"tab-pane fade in active\\\">\\n    <h3 class=\\\"head text-center\\\">{{title}}</h3>\\n    <h4 class=\\\"text-center\\\">\\n        Olá {{ formData.name }},\\n    </h4>\\n    <p class=\\\"narrow text-center\\\">\\n        Em breve nossos atendentes vão entrar em contato com você.\\n    </p>\\n    <br />\\n    <br />\\n    <br />\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { FormData } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\n\n@Component ({\n    selector:     'mt-wizard-result',\n    templateUrl: './result.component.html'\n})\n\nexport class ResultComponent implements OnInit {\n    title = 'Obrigado pela preferência!';\n    @Input() formData: FormData;\n    isFormValid: boolean = false;\n\n    constructor(private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.formData = this.formDataService.getFormData();\n        this.isFormValid = this.formDataService.isFormValid();\n    }\n\n    submit() {\n        this.formData = this.formDataService.resetFormData();\n        this.isFormValid = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class CepService {\n\n  constructor(private http: HttpClient) { }\n\n  get(cep: string): Observable<any> {\n    return this.http.get(`https://viacep.com.br/ws/${cep}/json/`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\n\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(type: string): Observable<any> {\n    return this.http.get(`https://assineliveinternet.com/data/${type}`);\n  }\n\n  sendDisponibility(number: string, city: string, state: string): Observable<any> {\n    const formData = new FormData();\n    formData.append('numero', number);\n    formData.append('cidade', city);\n    formData.append('estato', state);\n    // tslint:disable-next-line:max-line-length\n    return this.http.post(`https://assineliveinternet.com/tim-response/disponibilidade.php`, formData, {responseType: 'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class EmailService {\n\n  constructor(private http: HttpClient) { }\n\n  send(subject: string, body: string): Observable<any> {\n    const formData = new FormData();\n    formData.append('body', body);\n    formData.append('subject', subject);\n    // return this.http.post('http://localhost/tim-response/send.php', formData, {responseType: 'text'});\n    return this.http.post('https://assineliveinternet.com/tim-response/send.php', formData, {responseType: 'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate, Router,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    CanLoad, Route\n} from '@angular/router';\n\nimport { WorkflowService } from './workflow.service';\n\n@Injectable()\nexport class WorkflowGuard implements CanActivate {\n    constructor(private router: Router, private workflowService: WorkflowService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let path: string = route.routeConfig.path;\n\n        return this.verifyWorkFlow(path);\n    }\n\n    verifyWorkFlow(path) : boolean {\n        // console.log(\"Entered '\" + path + \"' path.\");\n\n        // If any of the previous steps is invalid, go back to the first invalid step\n        let firstPath = this.workflowService.getFirstInvalidStep(path);\n        if (firstPath.length > 0) {\n            // console.log(\"Redirected to '\" + firstPath + \"' path which it is the first invalid step.\");\n            let url = `/${firstPath}`;\n            this.router.navigate([url]);\n            return false;\n        };\n\n        return true;\n    }\n}\n\n\n","export const STEPS = {\n    location: 'location',\n    plan: 'plan',\n    person: 'person',\n    payment: 'payment'\n}\n","import { Injectable } from '@angular/core';\n\nimport { STEPS } from './workflow.model';\n\n@Injectable()\nexport class WorkflowService {\n    private workflow = [\n        { step: STEPS.location, valid: false },\n        { step: STEPS.plan, valid: false },\n        { step: STEPS.person, valid: false },\n        { step: STEPS.payment, valid: false }\n    ];\n\n    validateStep(step: string) {\n        // If the state is found, set the valid field to true\n        var found = false;\n        for (var i = 0; i < this.workflow.length && !found; i++) {\n            if (this.workflow[i].step === step) {\n                found = this.workflow[i].valid = true;\n            }\n        }\n    }\n\n    resetSteps() {\n        // Reset all the steps in the Workflow to be invalid\n        this.workflow.forEach(element => {\n            element.valid = false;\n        });\n    }\n\n    getFirstInvalidStep(step: string) : string {\n        // If all the previous steps are validated, return blank\n        // Otherwise, return the first invalid step\n        var found = false;\n        var valid = true;\n        var redirectToStep = '';\n        for (var i = 0; i < this.workflow.length && !found && valid; i++) {\n            let item = this.workflow[i];\n            if (item.step === step) {\n                found = true;\n                redirectToStep = '';\n            }\n            else {\n                valid = item.valid;\n                redirectToStep = item.step\n            }\n        }\n        return redirectToStep;\n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}